# Example configuration file for HAProxy 1.3, refer to the url below for
# a full documentation and examples for configuration:
# http://haproxy.1wt.eu/download/1.3/doc/configuration.txt

# Global parameters
global

	# Log events to a remote syslog server at given address using the
	# specified facility and verbosity level. Multiple log options
	# are allowed.
	#log 10.0.0.1 daemon info

	# Specifiy the maximum number of allowed connections.
	maxconn 32000

	# Raise the ulimit for the maximum allowed number of open socket
	# descriptors per process. This is usually at least twice the
	# number of allowed connections (maxconn * 2 + nb_servers + 1) .
	ulimit-n 65535

	# Drop privileges (setuid, setgid), default is "root" on OpenWrt.
	uid 0
	gid 0

	# Perform chroot into the specified directory.
	#chroot /var/run/haproxy/

	# Daemonize on startup
	daemon

	nosplice
	# Enable debugging
	#debug

	# Spawn given number of processes and distribute load among them,
	# used for multi-core environments or to circumvent per-process
	# limits like number of open file descriptors. Default is 1.
	#nbproc 2


# Example HTTP proxy listener
frontend http_proxy
	bind 213.191.184.70:80
	mode http
	option forwardfor
	option http-server-close
	reqadd X-Forwared-Proto:\ http
	reqadd X-Forwarded-Port:\ 80
	#log /var/log/haproxy.log

	acl host_website hdr(host) -i viktorbarzin.me
	acl host_kms_info hdr(host) -i kms.samitor.com
	acl host_privatebin hdr(host) -i pb.samitor.com

	use_backend docker_gateway_http if host_website
	use_backend kms_info_http if host_kms_info
	use_backend privatebin_http if host_privatebin

	#balance roundrobin
	#server server01 10.2.0.1:80

frontend https_proxy

	# Bind to port 81 and 444 on all interfaces (0.0.0.0)
	bind 213.191.184.70:443 ssl crt /root/le/live/viktorbarzin.me/viktorbarzin.me.pem

	# We're proxying HTTP here...
	mode http
	option forwardfor
	option http-server-close
	reqadd X-Forwarded-Proto:\ https
	reqadd X-Forwarded-Port:\ 443

	acl host_website hdr(host) -i viktorbarzin.me
	use_backend docker_gateway_https if host_website

	# Simple HTTP round robin over two servers using the specified
	# source ip 192.168.1.1 .
	#balance roundrobin
	#server server01 10.2.0.1:443 ssl verify none

	# Serve an internal statistics page on /stats:
	#stats enable
	#stats uri /stats

	# Enable HTTP basic auth for the statistics:
	#stats realm HA_Stats
	#stats auth username:password

	#default_backend docker_gateway_http

backend docker_gateway_http
	mode http
	option httpclose
        option forwardfor
        server node1 10.2.0.1:80

backend docker_gateway_https
	mode http
        option httpclose
        option forwardfor
        server node1 10.2.0.1:443 ssl verify none

backend kms_info_http
	mode http
        option httpclose
        option forwardfor
        server node1 10.2.0.3:80

backend privatebin_http
        mode http
        option httpclose
        option forwardfor
        server node1 10.2.0.1:8000




# Special health check listener for integration with external load
# balancers.
#listen local_health_check

	# Listen on port 60000
#	bind :60000

	# This is a health check
#	mode health

	# Enable HTTP-style responses: "HTTP/1.0 200 OK"
	# else just print "OK".
	#option httpchk
